//
// PlaybackStopInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Class PlaybackStopInfo.   */

public struct PlaybackStopInfo: Codable {

    public var nowPlayingQueue: [QueueItem]?
    public var playlistItemId: String?
    public var playlistIndex: Int?
    public var playlistLength: Int?
    /** The session id. */
    public var sessionId: String?
    public var isAutomated: Bool?
    /** A value indicating whether this &#x60;MediaBrowser.Model.Session.PlaybackStopInfo&#x60; is failed. */
    public var failed: Bool?
    public var nextMediaType: String?
    /** The play session identifier. */
    public var playSessionId: String?
    /** The item identifier. */
    public var itemId: String?
    /** The live stream identifier. */
    public var liveStreamId: String?
    /** The media version identifier. */
    public var mediaSourceId: String?
    public var item: BaseItemDto?
    /** The position ticks. */
    public var positionTicks: Int64?

    public init(nowPlayingQueue: [QueueItem]? = nil, playlistItemId: String? = nil, playlistIndex: Int? = nil, playlistLength: Int? = nil, sessionId: String? = nil, isAutomated: Bool? = nil, failed: Bool? = nil, nextMediaType: String? = nil, playSessionId: String? = nil, itemId: String? = nil, liveStreamId: String? = nil, mediaSourceId: String? = nil, item: BaseItemDto? = nil, positionTicks: Int64? = nil) {
        self.nowPlayingQueue = nowPlayingQueue
        self.playlistItemId = playlistItemId
        self.playlistIndex = playlistIndex
        self.playlistLength = playlistLength
        self.sessionId = sessionId
        self.isAutomated = isAutomated
        self.failed = failed
        self.nextMediaType = nextMediaType
        self.playSessionId = playSessionId
        self.itemId = itemId
        self.liveStreamId = liveStreamId
        self.mediaSourceId = mediaSourceId
        self.item = item
        self.positionTicks = positionTicks
    }

    public enum CodingKeys: String, CodingKey { 
        case nowPlayingQueue = "NowPlayingQueue"
        case playlistItemId = "PlaylistItemId"
        case playlistIndex = "PlaylistIndex"
        case playlistLength = "PlaylistLength"
        case sessionId = "SessionId"
        case isAutomated = "IsAutomated"
        case failed = "Failed"
        case nextMediaType = "NextMediaType"
        case playSessionId = "PlaySessionId"
        case itemId = "ItemId"
        case liveStreamId = "LiveStreamId"
        case mediaSourceId = "MediaSourceId"
        case item = "Item"
        case positionTicks = "PositionTicks"
    }

}
