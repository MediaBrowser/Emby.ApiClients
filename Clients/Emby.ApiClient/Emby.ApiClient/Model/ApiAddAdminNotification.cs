// <copyright file="ApiAddAdminNotification.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// ApiAddAdminNotification.
    /// </summary>
    /// <seealso>Emby.Notifications.Api.AddAdminNotification</seealso>
    public partial class ApiAddAdminNotification :  IEquatable<ApiAddAdminNotification>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiAddAdminNotification" /> class.
        /// </summary>
        public ApiAddAdminNotification()
        {
        }
        
        /// <summary>
        /// Gets or Sets DisplayDateTime
        /// </summary>
        /// <value>The DisplayDateTime.</value>
        public bool? DisplayDateTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiAddAdminNotification {\n");
            sb.Append("  DisplayDateTime: ").Append(DisplayDateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiAddAdminNotification);
        }

        /// <summary>
        /// Returns true if ApiAddAdminNotification instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiAddAdminNotification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiAddAdminNotification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DisplayDateTime == input.DisplayDateTime ||
                    (this.DisplayDateTime != null &&
                    this.DisplayDateTime.Equals(input.DisplayDateTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DisplayDateTime != null)
                    hashCode = hashCode * 59 + this.DisplayDateTime.GetHashCode();
                return hashCode;
            }
        }
    }
}