// <copyright file="EmbyAuthInfo.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>

namespace Emby.ApiClient.Client.Authentication
{
    using System;

    /// <summary>
    /// Emby Authorization Info.
    /// </summary>
    public class EmbyAuthInfo
    {
        /// <summary>Initializes a new instance of the <see cref="EmbyAuthInfo"/> class.</summary>
        /// <param name="userId">The user identifier.</param>
        /// <param name="client">The client.</param>
        /// <param name="device">The device.</param>
        /// <param name="deviceId">The device identifier.</param>
        /// <param name="version">The version.</param>
        public EmbyAuthInfo(string userId, string client, string device, string deviceId, string version)
        {
            if (string.IsNullOrWhiteSpace(userId))
            {
                throw new ArgumentException("Value cannot be null or whitespace.", nameof(userId));
            }

            if (string.IsNullOrWhiteSpace(client))
            {
                throw new ArgumentException("Value cannot be null or whitespace.", nameof(client));
            }

            if (string.IsNullOrWhiteSpace(device))
            {
                throw new ArgumentException("Value cannot be null or whitespace.", nameof(device));
            }

            if (string.IsNullOrWhiteSpace(deviceId))
            {
                throw new ArgumentException("Value cannot be null or whitespace.", nameof(deviceId));
            }

            if (string.IsNullOrWhiteSpace(version))
            {
                throw new ArgumentException("Value cannot be null or whitespace.", nameof(version));
            }

            this.UserId = userId;
            this.Client = client;
            this.Device = device;
            this.DeviceId = deviceId;
            this.Version = version;
        }

        public string UserId { get; }

        public string Client { get; }

        public string Device { get; }

        public string DeviceId { get; }

        public string Version { get; }

        /// <summary>Returns a string that represents the current object.</summary>
        /// <returns>A string that represents the current object.</returns>
        public override string ToString()
        {
            return this.ToString(string.Empty);
        }

        /// <summary>Returns a string that represents the current object.</summary>
        /// <returns>A string that represents the current object.</returns>
        public string ToString(string token)
        {
            var header = string.Format("Emby UserId=\"{0}\", Client=\"{1}\", Device=\"{2}\", DeviceId=\"{3}\", Version=\"{4}\", Token=\"{5}\"",
                this.UserId, this.Client, this.Device, this.DeviceId, this.Version, token);

            return header;
        }
    }
}